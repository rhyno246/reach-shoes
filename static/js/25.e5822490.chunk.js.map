{"version":3,"sources":["img_local/cart.png","components/Cartitem/index.jsx","containers/Cart/index.jsx"],"names":["CartItem","props","id","title","image","price","quantity","size","sizeChose","stock","status","Option","Select","dispatch","useDispatch","className","src","alt","to","parseFloat","toFixed","defaultValue","onChange","val","changeSizeCart","style","width","marginBottom","marginLeft","map","item","index","value","onClick","dashItemCart","disabled","plusCart","RemoveProductToCart","type","Cart","cartList","useSelector","state","cart","totalCart","total","isAuth","auth","setUser","length","hoverable","cover","marginRight","removeAllCart","checkOut","cartEmtry"],"mappings":"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","file":"static/js/25.e5822490.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cart.21af91c8.png\";","import React from 'react'\r\nimport \"./index.scss\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { plusCart, RemoveProductToCart , dashItemCart, changeSizeCart } from '../../Slice/cartSlice';\r\nimport { Button, Select } from 'antd';\r\n\r\n\r\n\r\nconst CartItem = (props) => {\r\n    const { id , title , image , price , quantity , size , sizeChose , stock , status } = props\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch()\r\n    const handleDeleteCartItem = () => {\r\n        dispatch(RemoveProductToCart({\r\n            id : id,\r\n            price : price,\r\n            quantity : quantity\r\n        }))\r\n    }\r\n    const handleDashCart = () => {\r\n        dispatch(dashItemCart({id : id}))\r\n    }\r\n    const handlePlusCart = () => {\r\n        dispatch(plusCart({id : id }))\r\n    }\r\n    \r\n    // const changeNumberCart = (val , info) => {\r\n    //     if(info.type === \"up\"){\r\n    //         dispatch(plusCart({\r\n    //             id : id, \r\n    //             stock : stock,\r\n    //         }))\r\n    //     }\r\n    //     if(info.type === \"down\"){\r\n    //         dispatch(dashItemCart({id : id}))\r\n    //     }\r\n    // }\r\n \r\n    // const handleBlurInput = debounce((val) => {\r\n    //     dispatch(BlurInputCart({\r\n    //         number : val,\r\n    //         id : id,\r\n    //         stock : stock\r\n    //     }))\r\n    // }, 700)\r\n\r\n    const changeItemSelectCart = (val) => {\r\n        dispatch(changeSizeCart({\r\n            val : val,\r\n            id : id\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n       <div className=\"cart-item\">\r\n           <div className=\"container\">\r\n                <div className=\"cart-group\">\r\n                    <div className=\"cart-img\">\r\n                        <img src= { image[0] } alt={ title } />\r\n                    </div>\r\n                    <div className=\"text\">\r\n                        <div className=\"pb-10 cart-title\">\r\n                            <h4>\r\n                                <Link \r\n                                     to={ status === \"product\" ? `shoes/${id}` : null ||\r\n                                     status === \"otherbrand\" ? `other-brands/${id}` :  null ||\r\n                                     status === \"Shoelace\" ? `shoes-lace/${id}` : null} \r\n                                >\r\n                                    { title }\r\n                                </Link>\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"pb-10 price\"><strong>price :</strong> <span className=\"color-cart\">{ parseFloat(price).toFixed(2) } $</span></div>\r\n                        <div className=\"pb-10 quantity\"><strong>quantity : </strong><span className=\"color-cart\">{ quantity }</span></div>\r\n                        { size ? <div className=\"margin\">\r\n                            <strong>Choose size :</strong>\r\n                            <Select \r\n                                size=\"large\" defaultValue={ sizeChose } \r\n                                onChange={ changeItemSelectCart } \r\n                                style={{ width: 150 , marginBottom : \"20px\" , marginLeft : \"10px\" }}\r\n                            >\r\n                                { size && size.map(( item,index ) => (\r\n                                    <Option value={ item } key={ index }>{ item }</Option>\r\n                                )) }\r\n                            </Select>\r\n                        </div> : null }\r\n                        <div className=\"input-count\" style={{ marginBottom: \"40px\" }}>\r\n                            <strong>More product : </strong>\r\n                            {/* <InputNumber defaultValue={ quantity } min={ 1 } max= { stock } onStep={ changeNumberCart } onChange = { handleBlurInput }/> */}\r\n                    \r\n                            <button className=\"input-number-decrement\" onClick={  handleDashCart } disabled={ quantity <= 1 }>â€“</button>\r\n                            <span className=\"quantity-number\">{ quantity }</span>\r\n                            <button className=\"input-number-increment\" onClick={ handlePlusCart } disabled={ quantity === stock }>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"delete-cart\">\r\n                        <Button onClick={ handleDeleteCartItem } type=\"danger\">Delete</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </div>\r\n   ) \r\n}\r\n\r\nexport default CartItem","import { Button, Card } from 'antd';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport cartEmtry from '../../img_local/cart.png';\r\nimport CartItem from \"../../components/Cartitem\";\r\nimport { checkOut, removeAllCart } from '../../Slice/cartSlice';\r\nimport './index.scss';\r\n\r\n\r\nconst Cart = () => {\r\n    const cartList = useSelector(state => state.cart.cart)\r\n    const totalCart = useSelector(state => state.cart.total)\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(state => state.auth.setUser)\r\n    const ClearAllCart = () => {\r\n        dispatch(removeAllCart())\r\n    }\r\n\r\n    const handleCheckOut = () => {\r\n        dispatch(checkOut(cartList))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            { cartList && cartList.length > 0 ?  \r\n            <div className=\"main-cart\"> \r\n                <div className=\"container\">\r\n                    { cartList.map(item => (\r\n                        <Card hoverable cover key={ item.id } style={{ marginBottom : \"20px\" }}>\r\n                            <CartItem \r\n                                id={ item.id } \r\n                                title={ item.title } \r\n                                image={ item.image }\r\n                                price={ item.price }\r\n                                quantity = { item.quantity }\r\n                                size = { item.size }\r\n                                sizeChose = { item.sizeChose }\r\n                                stock = { item.stock }\r\n                                status = { item.status }\r\n                            /> \r\n                        </Card>\r\n                    )) }\r\n                    <div className=\"group-checkout\">\r\n                        <div className=\"total\">Total Price : { parseFloat(totalCart).toFixed(2) } $</div>\r\n                        <Button type=\"danger\" style={{ marginRight : \"10px\" }} onClick ={ ClearAllCart }>Clear All</Button>\r\n                        <Button type=\"primary\" onClick={ handleCheckOut }>\r\n                            <Link to={ isAuth ? `/check-out` : `/login` }>\r\n                                Check Out\r\n                            </Link>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>:\r\n                <div className=\"emtry-cart\">\r\n                    <img src={ cartEmtry } alt=\"\"/>\r\n                    <div className=\"txt\">Opps !!! Cart Empty</div>\r\n                    <Link to=\"/\" className=\"continue\">Continue Shopping</Link>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart"],"sourceRoot":""}