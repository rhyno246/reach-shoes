{"version":3,"sources":["components/Loading/index.jsx","components/ArrowSlide/index.jsx","containers/DetailShoeLace/index.jsx"],"names":["Loading","className","size","ArrowSlide","to","onClick","type","aria-label","DetailShoeLace","id","useParams","dispatch","useDispatch","Option","Select","useState","nav1","setNav1","nav2","setNav2","listShoeslace","useSelector","state","product","detailshoeslace","sizeChange","setSizeChange","loading","prodId","title","imageArr","image","quantity","price","sale","status","desc","description","salePrice","useEffect","getDetailShoelace","style","maxWidth","asNavFor","ref","c","prevArrow","nextArrow","map","item","index","src","alt","slidesToShow","length","swipeToSlide","focusOnSelect","arrows","slidesToScroll","marginRight","charLimit","readMoreText","readLessText","readMoreClassName","readLessClassName","onChange","val","defaultValue","width","marginLeft","value","AddToCart","stock","shoeslace","sizeChose","disabled"],"mappings":"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","file":"static/js/20.ff89a7da.chunk.js","sourcesContent":["import { Spin } from 'antd'\r\nimport React from 'react'\r\nimport './index.scss'\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"loading\">\r\n                <Spin size=\"large\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading","import { Button } from 'antd'\r\nimport React from 'react'\r\nimport { RightOutlined , LeftOutlined } from '@ant-design/icons';\r\nimport './index.scss'\r\nconst ArrowSlide =  ({className, to, onClick}) => (\r\n    <Button type=\"button\" onClick={onClick} className={`button-slide ${className}`} aria-label={to}>\r\n        { to === \"next\" ? <RightOutlined /> : <LeftOutlined />} \r\n    </Button>\r\n)\r\nexport default ArrowSlide\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport ArrowSlide from '../../components/ArrowSlide';\r\nimport Loading from '../../components/Loading';\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { AddToCart } from '../../Slice/cartSlice';\r\nimport { Button, Select } from 'antd';\r\nimport Slider from 'react-slick';\r\nimport { getDetailShoelace } from '../../Slice/productSlice';\r\nimport './index.scss'\r\nfunction DetailShoeLace() {\r\n    const param = useParams()\r\n    const id = param.id;\r\n    const dispatch = useDispatch()\r\n    const { Option } = Select;\r\n    const [nav1, setNav1] = useState();\r\n    const [nav2, setNav2] = useState();\r\n    const listShoeslace = useSelector(state => state.product.detailshoeslace)\r\n    const [sizeChange , setSizeChange] = useState(null)\r\n    const loading = useSelector(state => state.product.loading)\r\n    const prodId = listShoeslace.id\r\n    const title = listShoeslace.title\r\n    const imageArr = listShoeslace.image\r\n    const quantity = listShoeslace.quantity\r\n    const size = listShoeslace.size\r\n    const price = listShoeslace.price\r\n    const sale = listShoeslace.sale\r\n    const status = listShoeslace.status\r\n    let desc = listShoeslace && listShoeslace.description\r\n    const salePrice = price - sale * price\r\n    useEffect(() => {\r\n        dispatch(getDetailShoelace(id))\r\n    }, [ dispatch ,  id])\r\n    const handleChange = (val) => {\r\n        setSizeChange(val)\r\n    }\r\n    const handleAddToCart = () => {\r\n        if(sale){\r\n            dispatch(AddToCart({\r\n                id : prodId,\r\n                title : title,\r\n                price : salePrice,\r\n                image : imageArr,\r\n                stock : quantity,\r\n                shoeslace : true,\r\n                size : size,\r\n                status : status,\r\n                sizeChose : sizeChange || size[0],\r\n            }))\r\n        }\r\n        else{\r\n            dispatch(AddToCart({\r\n                id : prodId,\r\n                title : title,\r\n                price : price,\r\n                image : imageArr,\r\n                stock : quantity,\r\n                shoeslace : true,\r\n                status : status,\r\n                size : size,\r\n                sizeChose : sizeChange || size[0],\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"detail-shoe\">\r\n                { loading ? <Loading/> : <div className=\"container\">\r\n                <div className=\"main\" style={{ maxWidth : \"100%\" }}>\r\n                    <div className=\"img\">\r\n                        <Slider \r\n                            asNavFor={nav2} \r\n                            ref={c => setNav1(c)} \r\n                            prevArrow = {<ArrowSlide to=\"prev\" /> }\r\n                            nextArrow = {<ArrowSlide to=\"next\" />}\r\n                        >\r\n                            { imageArr && imageArr.map((item , index) =>(\r\n                                <div className=\"slide-img\" key={ index }>\r\n                                    <img src={ item } alt={ index }/>\r\n                                </div>\r\n                            )) }\r\n                        </Slider>\r\n                        <Slider\r\n                            asNavFor={nav1}\r\n                            ref={c => setNav2(c)}\r\n                            slidesToShow={ imageArr && imageArr.length > 4 ? 4 : imageArr && imageArr.length }\r\n                            swipeToSlide={true}\r\n                            focusOnSelect={true}\r\n                            arrows={false}\r\n                            slidesToScroll = { 1 }\r\n            \r\n                        >\r\n                            { imageArr && imageArr.map((item , index) =>(\r\n                                <div className=\"thumb\" key={ index }>\r\n                                    <img src={ item } alt={ index }/>\r\n                                </div>\r\n                            )) }\r\n                        </Slider>\r\n                    </div>\r\n                    <div className=\"right-txt\">\r\n                        <h3 className=\"margin name\">{ title }</h3>\r\n                        { sale ? <div className=\"margin\">\r\n                            <strong>Sale : </strong><span className=\"category sale\">{ sale * 100 }%</span>\r\n                            </div> : null\r\n                        }\r\n                        <div className=\"margin\">\r\n                            <strong>Price : </strong> \r\n                            { sale ? \r\n                                <span style={{ marginRight : \"10px\" }} className=\"category new-price\">\r\n                                    { salePrice } $\r\n                                </span> : null \r\n                                }\r\n                            <span className={sale ? \"old-price\" : \"new-price\" }>{ price } $</span>\r\n                        </div> \r\n                        {   quantity === 0 ? <div className=\"margin\"> \r\n                                <span className=\"category\">Out Stock</span> \r\n                                </div> :\r\n                            <div className=\"margin\"><strong>Quantity : </strong> \r\n                                <span className=\"category\">{ quantity } </span> \r\n                            </div>\r\n                        }\r\n                        <div className=\"margin\">\r\n                            <strong>Description :</strong> \r\n                            <span className=\"description\">\r\n                                <ReactReadMoreReadLess\r\n                                    charLimit={250}\r\n                                    readMoreText={\"Read more\"}\r\n                                    readLessText={\"Read less\"}\r\n                                    readMoreClassName=\"read-more-less--more\"\r\n                                    readLessClassName=\"read-more-less--less\"\r\n                                >\r\n                                    { desc ? desc : \"\" }\r\n                                </ReactReadMoreReadLess>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"margin\">\r\n                            <Select size=\"large\" \r\n                                onChange={handleChange} \r\n                                defaultValue=\"Choose Size\"\r\n                                style={{ width: 200 , marginLeft : \"5px\" }}\r\n                            >\r\n                                { size && size.map(( item,index ) => (\r\n                                    <Option value={ item } key={ index }>{ item }</Option>\r\n                                )) }\r\n                            </Select>\r\n                        </div>\r\n                        <Button type=\"primary\" onClick ={ handleAddToCart } disabled = { quantity === 0 }>\r\n                            Add To Cart\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> }\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default DetailShoeLace;"],"sourceRoot":""}